name: Create Release PR
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Select type of release'
        required: true
        type: choice
        default: patch
        options: 
        - patch
        - minor
        - major

permissions:
  contents: write
  pull-requests: write
jobs:
  create_release_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Get Next Version
        id: nv
        run:
          echo "new_version=$(npx semver $(jq -r .version package.json) -i ${{ github.event.inputs.release_type }})" >> $GITHUB_OUTPUT

      - name: Create release branch
        run: |
          RELEASE_BRANCH="release/${{ steps.nv.outputs.new_version }}"
          git checkout -b "$RELEASE_BRANCH" develop
          git push --set-upstream origin "$RELEASE_BRANCH"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: 22

      - name: Install deps
        run: npm ci

      - name: Update release version
        run: |
          RELEASE_BRANCH="release/${{ steps.nv.outputs.new_version }}"
          git status
          if [ -f package.json ]; then
            npm version ${{ steps.nv.outputs.new_version }} --no-git-tag-version
            git add package.json package-lock.json
          fi
          if [ -f publiccode.yml ]; then
            node scripts/ci/updatePubliccodeReleaseDate.js
            node scripts/ci/updatePubliccodeSoftwareVersion.js ${{ steps.nv.outputs.new_version }}
            git add publiccode.yml
          fi
          git commit -m "chore: bump version to ${{ steps.nv.outputs.new_version }}" || echo "No changes to commit"
          git push origin "$RELEASE_BRANCH"        

      - name: Create PR          
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_BRANCH="release/${{ steps.nv.outputs.new_version }}"
          git checkout "$RELEASE_BRANCH"
          gh pr create -t "chore: release ${{ steps.nv.outputs.new_version }}" -b "Release ${{ steps.nv.outputs.new_version }}. Both Package version and publiccode.yml are already updated. Don't forget to edit CHANGELOG.md" -B main -l release